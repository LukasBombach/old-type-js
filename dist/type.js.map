{"version":3,"file":"type.js","names":[],"mappings":"","sources":["type.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./src/type.js\":[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar Cmd = require('./modules/cmd.js');\n\nvar cmd = new Cmd();\n\n/**\n * The main class required to set up a Type instance in the browser.\n *\n * @class Type\n * @constructor\n */\nvar Type = function() {\n  console.log('HELLO');\n};\n\n\nglobal.Type = Type;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./modules/cmd.js\":\"/Users/luke/HTW/Masterarbeit/Code/Type.js/src/modules/cmd.js\"}],\"/Users/luke/HTW/Masterarbeit/Code/Type.js/src/modules/cmd.js\":[function(require,module,exports){\n\"use strict\";\n\nvar Range = require('./range');\n\n/**\n * Class to handle commands for text formatting.\n *\n * @class Cmd\n * @constructor\n */\nvar Cmd = function() {\n  console.log('Test in Cmd');\n};\n\n(function() {\n\n  /**\n   * Wraps the current selection with <strong> tags\n   */\n  this.bold = function() {\n\n  }\n\n}).call(Cmd.prototype);\n\n\nmodule.exports = Cmd;\n},{\"./range\":\"/Users/luke/HTW/Masterarbeit/Code/Type.js/src/modules/range.js\"}],\"/Users/luke/HTW/Masterarbeit/Code/Type.js/src/modules/range.js\":[function(require,module,exports){\n\"use strict\";\n\n/**\n * Class to handle browser ranges\n *\n * @class Range\n * @constructor\n */\nvar Range = function() {\n\n};\n\n(function() {\n\n}).call(Range.prototype);\n\n/**\n * Returns a Range representation of the current browser range\n *\n * @returns {Range}\n **/\nRange.get = function() {\n  return new Range();\n};\n\nmodule.exports = Range;\n},{}]},{},[\"./src/type.js\"]);\n"],"sourceRoot":"/source/"}